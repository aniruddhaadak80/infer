"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[517],{6751:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>a,toc:()=>r});var i=s(4848),n=s(8453);const c={title:"Immutable Cast",description:"Detection of object cast from immutable types to mutable types. For instance, it will detect casts from `ImmutableList` to `List`, `ImmutableMap` to `Map`, and `ImmutableSet` to `Set`."},o=void 0,a={id:"checker-immutable-cast",title:"Immutable Cast",description:"Detection of object cast from immutable types to mutable types. For instance, it will detect casts from `ImmutableList` to `List`, `ImmutableMap` to `Map`, and `ImmutableSet` to `Set`.",source:"@site/versioned_docs/version-1.1.0/checker-immutable-cast.md",sourceDirName:".",slug:"/checker-immutable-cast",permalink:"/docs/1.1.0/checker-immutable-cast",draft:!1,unlisted:!1,tags:[],version:"1.1.0",frontMatter:{title:"Immutable Cast",description:"Detection of object cast from immutable types to mutable types. For instance, it will detect casts from `ImmutableList` to `List`, `ImmutableMap` to `Map`, and `ImmutableSet` to `Set`."},sidebar:"docs",previous:{title:"Fragment Retains View",permalink:"/docs/1.1.0/checker-fragment-retains-view"},next:{title:"Impurity",permalink:"/docs/1.1.0/checker-impurity"}},l={},r=[{value:"List of Issue Types",id:"list-of-issue-types",level:2}];function m(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.p,{children:["Detection of object cast from immutable types to mutable types. For instance, it will detect casts from ",(0,i.jsx)(t.code,{children:"ImmutableList"})," to ",(0,i.jsx)(t.code,{children:"List"}),", ",(0,i.jsx)(t.code,{children:"ImmutableMap"})," to ",(0,i.jsx)(t.code,{children:"Map"}),", and ",(0,i.jsx)(t.code,{children:"ImmutableSet"})," to ",(0,i.jsx)(t.code,{children:"Set"}),"."]}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.strong,{children:"***DEPRECATED***"})," Unmaintained due to poor actionability of the reports."]}),"\n",(0,i.jsxs)(t.p,{children:["Activate with ",(0,i.jsx)(t.code,{children:"--immutable-cast"}),"."]}),"\n",(0,i.jsx)(t.p,{children:"Supported languages:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"C/C++/ObjC: No"}),"\n",(0,i.jsx)(t.li,{children:"Java: Yes"}),"\n",(0,i.jsx)(t.li,{children:"C#/.Net: Yes"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Casts flagged by this checker are unsafe because calling mutation operations on the cast objects will fail at runtime."}),"\n",(0,i.jsx)(t.h2,{id:"list-of-issue-types",children:"List of Issue Types"}),"\n",(0,i.jsx)(t.p,{children:"The following issue types are reported by this checker:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"/docs/1.1.0/all-issue-types#checkers_immutable_cast",children:"CHECKERS_IMMUTABLE_CAST"})}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>a});var i=s(6540);const n={},c=i.createContext(n);function o(e){const t=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(c.Provider,{value:t},e.children)}}}]);